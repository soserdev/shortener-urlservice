# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI - Java Maven Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven and Run Integration Tests
        run: mvn verify

## Need artifact and version for docker build
      - name: Extract Maven artifactId and version
        id: maven-info
        run: |
          ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "artifact_id=$ARTIFACT_ID" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

    outputs:
      artifact_id: ${{ steps.maven-info.outputs.artifact_id }}
      version: ${{ steps.maven-info.outputs.version }}

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker image name
        id: vars
        run: |
          echo "image_name=${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.build-test.outputs.artifact_id }}" >> $GITHUB_OUTPUT
          echo "image_version=${{ needs.build-test.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.vars.outputs.image_name }}
          tags: |
            latest
            ${{ steps.vars.outputs.image_version }}

      - name: Build and Push Multi-platform Docker Image (linux + macos)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64 #,darwin/amd64,darwin/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


